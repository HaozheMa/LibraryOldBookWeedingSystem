@model LibrarySystem.Models.Books

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Books</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <p class="control-label col-md-2">索书号</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CallNum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CallNum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label col-md-2">作者</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label col-md-2">书名</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label col-md-2">ISBN</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label col-md-2">复本量</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Duplicates, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Duplicates, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            <p class="control-label col-md-2">出版社</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublisherName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PublisherName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label col-md-2">出版社是否百佳</p>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PublisherBaiJia)
                    @Html.ValidationMessageFor(model => model.PublisherBaiJia, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <p class="control-label col-md-2">单书流通频次</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CirculationCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CirculationCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label col-md-2">出版年份</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublishYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PublishYear, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            <p class="control-label col-md-2">最新离架时长</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.OffTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OffTime, "", new { @class = "text-danger" })
            </div>
        </div>


        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
